public class Covert4Bit  {

static char data[] = {
	11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,
	11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,
	11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,
	4,2,2,4,2,2,2,11,11,11,11,11,11,11,11,11,
	11,11,11,11,11,11,11,11,11,4,8,10,10,8,2,4,
	2,13,5,1,7,12,1,2,11,11,11,11,11,11,11,11,
	11,11,11,11,11,11,11,11,4,6,9,10,10,9,8,2,
	7,1,14,5,1,7,12,1,2,11,11,11,11,11,11,11,
	11,11,11,11,11,11,11,11,0,8,10,9,9,8,9,2,
	7,1,1,14,5,1,12,7,1,11,11,11,11,11,11,11,
	11,11,11,11,11,11,11,11,0,6,6,6,6,9,1,7,
	1,1,1,1,1,1,1,7,0,11,11,11,11,11,11,11,
	11,11,11,11,11,11,11,0,0,0,0,8,9,1,7,1,
	1,1,13,1,14,5,1,1,0,11,11,11,11,11,11,11,
	11,11,11,11,11,11,11,0,0,6,0,6,1,7,1,1,
	1,12,13,1,1,1,1,1,1,1,11,11,11,11,11,11,
	11,11,11,11,11,11,11,11,2,2,2,1,7,1,1,1,
	7,13,12,1,14,5,0,7,7,1,1,11,11,11,11,11,
	11,11,11,11,11,11,11,1,1,12,7,7,1,1,1,7,
	12,12,7,1,1,0,0,1,1,7,0,4,11,11,11,11,
	11,11,11,11,11,11,11,4,0,1,1,1,1,1,7,12,
	12,7,1,1,13,5,0,1,1,1,0,4,11,11,11,11,
	11,11,11,11,11,11,11,4,0,0,0,1,7,12,12,7,
	1,1,1,1,0,1,0,1,1,1,0,4,11,11,11,11,
	11,11,11,11,11,11,4,1,1,7,12,13,13,12,7,1,
	1,1,1,13,1,0,0,0,0,0,1,11,11,11,11,11,
	11,11,11,11,11,11,1,1,12,14,14,13,12,7,1,1,
	1,1,0,1,5,0,0,0,1,4,11,11,11,11,11,11,
	11,11,11,11,11,4,0,0,1,1,7,7,7,1,1,1,
	1,13,1,0,0,1,1,0,4,11,11,11,11,11,11,11,
	11,11,11,11,11,0,1,7,14,12,1,1,1,1,1,1,
	1,1,5,0,1,1,1,0,11,11,11,11,11,11,11,11,
	11,11,11,11,11,0,1,7,12,7,1,1,1,1,1,13,
	1,1,0,1,1,1,1,0,4,4,11,11,11,11,11,11,
	11,11,11,11,11,0,1,1,1,1,1,0,1,12,1,1,
	5,0,1,1,1,1,0,1,4,4,4,11,11,11,11,11,
	11,11,11,11,11,0,1,7,7,1,1,0,0,5,1,0,
	0,1,1,1,1,0,1,0,4,4,4,4,11,11,11,11,
	11,11,11,11,11,0,1,1,1,1,0,1,0,0,1,1,
	1,1,1,0,0,1,1,0,4,4,4,4,11,11,11,11,
	11,11,11,11,11,0,1,1,1,1,0,0,0,0,0,0,
	0,0,0,0,1,1,1,0,2,4,4,4,11,11,11,11,
	11,11,11,11,11,0,1,1,1,0,0,1,1,1,1,1,
	0,0,0,0,0,0,1,0,1,4,4,4,11,11,11,11,
	11,11,11,11,11,2,0,0,0,1,0,1,1,7,1,1,
	0,1,1,1,0,0,1,0,0,4,4,11,11,11,11,11,
	11,11,11,11,11,11,11,4,4,4,1,1,1,1,1,0,
	0,2,4,2,0,0,0,0,0,4,11,11,11,11,11,11,
	11,11,11,11,11,11,4,4,4,4,0,1,7,7,1,1,
	0,4,4,4,1,0,0,0,1,4,11,11,11,11,11,11,
	11,11,11,11,11,4,4,4,4,4,0,1,1,1,1,1,
	0,4,4,4,4,4,4,4,4,4,11,11,11,11,11,11,
	11,11,11,11,11,4,4,4,4,4,4,0,0,1,0,0,
	1,4,4,4,4,4,4,4,4,11,11,11,11,11,11,11,
	11,11,11,11,11,4,4,4,4,0,0,0,0,1,0,0,
	4,4,4,4,4,4,4,4,11,11,11,11,11,11,11,11,
	11,11,11,11,11,11,4,4,0,1,1,0,0,0,0,0,
	4,4,4,4,4,11,11,11,11,11,11,11,11,11,11,11,
	11,11,11,11,11,11,11,11,0,1,0,0,0,0,0,0,
	4,4,4,11,11,11,11,11,11,11,11,11,11,11,11,11,
	11,11,11,11,11,11,11,11,2,0,0,0,1,0,0,1,
	4,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,
	11,11,11,11,11,11,11,11,11,11,4,4,4,4,4,4,
	11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11N
	};



	char 	byt;

 
	public static void main (String[] args)  {

		char[] byteArray = new char[data.length/2];
		String prefix;

		for (int x=0; x<data.length; x+=2)  {
			if ((x % 32) == 0) System.out.println();
			byteArray[x/2] = (char)((char)data[x] << 4 | (char)data[x+1]);
			if ((int)byteArray[x/2] < 16) prefix = "0x0";
			else prefix = "0x";
			System.out.print(prefix + Integer.toHexString(byteArray[x/2]).toUpperCase() + ",");


		}

	System.out.println();	
	}
}